version: "3"
services:
    zookeeper:
        image: confluentinc/cp-zookeeper:7.0.1
        container_name: zookeeper
        restart: always
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        volumes:
            - ./db_vol/zookeeper:/var/lib/zookeeper

    broker:
        image: confluentinc/cp-kafka:7.0.1
        container_name: broker
        restart: always
        expose:
            - 9092
        ports:
            - "9092:9092"
        depends_on:
            - zookeeper
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

    csfeed:
        image: cassandra:latest
        environment:
            - CASSANDRA_CLUSTER_NAME=my_cluster
        volumes:
            - ./db_vol/csfeed_data:/var/lib/cassandra/data
        ports:
            - "9042:9042"
        container_name: csfeed
        restart: always
    
    msalc:
        image: mysql:latest
        container_name: msalc
        expose:
            - 3308
        ports:
            - "3308:3306"
        environment:
            MYSQL_ROOT_PASSWORD: Abhinav@1712
            MYSQL_DATABASE: "resourceallocator"
        restart: always
        volumes:
            - ./db_vol/msalc_data:/var/lib/mysql
    
    msuser:
        image: mysql:latest
        container_name: msuser
        expose:
            - 3307
        ports:
            - "3307:3306"
        environment:
            MYSQL_ROOT_PASSWORD: Abhinav@1712
            MYSQL_DATABASE: "resourceuser"
        restart: always
        volumes:
            - ./db_vol/msuser_data:/var/lib/mysql
    
    mnallocation:
        image: mongo
        container_name: mnallocation
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: Abhinav1712
        ports:
            - "27019:27017"
        volumes:
            - ./db_vol/mnallocation_data:/data/db
        command: mongod --auth
    
    mnmachine:
        image: mongo
        container_name: mnmachine
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: Abhinav1712
        ports:
            - "27018:27017"
        volumes:
            - ./db_vol/mnmachine_data:/data/db
        command: mongod --auth
    
    mnverifire:
        image: mongo
        container_name: mnverifire
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: Abhinav1712
        ports:
            - "27020:27017"
        volumes:
            - ./db_vol/mnverifire_data:/data/db
        command: mongod --auth

    rsuser:
        image: redis:latest
        container_name: rsuser
        expose:
            - 6380
        ports:
            - "6380:6379"
    
    rsmachine:
        image: redis:latest
        container_name: rsmachine
        expose:
            - 6381
        ports:
            - "6381:6379"
    
    rsallocater:
        image: redis:latest
        container_name: rsallocater
        expose:
            - 6382
        ports:
            - "6382:6379"
    
    rsfeed:
        image: redis:latest
        container_name: rsfeed
        expose:
            - 6383
        ports:
            - "6383:6379"

    allocater:
        build:
            context: ./allocater
            dockerfile: Dockerfile
        expose:
            - 5003
        ports:
            - "5003:5003"
        container_name: allocater
        depends_on:
            - msalc
            - mnallocation
            - verifire
            # - dockgrpc
        restart: always
    
    feed:
        build:
            context: ./feed
            dockerfile: Dockerfile
        expose:
            - 5004
        ports:
            - "5004:5004"
        container_name: feed
        depends_on:
            - csfeed
            - mnverifire
            - verifire
        restart: always

    user:
        build: 
            context: ./user
            dockerfile: Dockerfile
        expose:
            - 5001
        ports:
            - "5001:5001"
        container_name: user
        depends_on:
            - msuser
            - verifire
        restart: always
    
    machine:
        build: 
            context: ./machine
            dockerfile: Dockerfile
        expose:
            - 5002
        ports:
            - "5002:5002"
        container_name: machine
        depends_on:
            - mnmachine
            - verifire
        restart: always
    
    # dock:
    #     build: 
    #         context: ./dock
    #         dockerfile: Dockerfile
    #     expose:
    #         - 5005
    #     ports:
    #         - "5005:5005"
    #     container_name: dock
    #     volumes:
    #         - /var/run/docker.sock:/var/run/docker.sock
    #     restart: always 
    
    dockgrpc:
        build: 
            context: ./dock-grpc
            dockerfile: Dockerfile
        expose:
            - 50051
        ports:
            - "50051:50051"
        container_name: dockgrpc
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        restart: always

    interact:
        build: 
            context: ./interact
            dockerfile: Dockerfile
        expose:
            - 5006
        ports:
            - "5006:5006"
        container_name: interact
        depends_on:
            - verifire
        restart: always 
    
    verifire:
        build: 
            context: ./verifire
            dockerfile: Dockerfile
        expose:
            - 50052
        ports:
            - "50052:50052"
        container_name: verifire
        depends_on:
            - mnverifire
        restart: always 
    
    gateway:
        image: nginx:latest
        restart: always
        container_name: gateway
        volumes:
            - "./gateway/default.conf:/etc/nginx/conf.d/default.conf"
        ports:
            - "5000:80"
    
    # mesh:
    #     image: nginx:latest
    #     restart: always
    #     container_name: mesh
    #     volumes:
    #         - "./mesh/default.conf:/etc/nginx/conf.d/default.conf"
    #     ports:
    #         - "50000:80"
    
    # central:
    #     build: 
    #         context: ./central-broker
    #         dockerfile: Dockerfile
    #     container_name: central
    #     depends_on:
    #         - mnmachine
    #         - mnverifire
    #         - mnallocation
    #         - msalc
    #         - msuser
    #     restart: always