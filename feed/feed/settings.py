"""
Django settings for feed project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from feed.env_config import ConfigUtil
from retrying import retry
from cassandra.cluster import Cluster

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
configuration = ConfigUtil().get_config_data()


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "_6sv*3j=^(yujps0-f9=&)!8x+(zs6uc=&qy_a@=42ejq0ak=d"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_cassandra_engine",
    "comments",
    "likes",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "middlewere.error-handler.ErrorHandlerMiddleware",
]

ROOT_URLCONF = "feed.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "feed.wsgi.application"


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases


@retry(
    wait_fixed=30000,  # wait for 30 seconds between retries
    stop_max_attempt_number=5,  # retry 5 times
)
def connect_to_cassandra():
    try:
        cluster = Cluster(["cassandra-container"])
        session = cluster.connect("your_keyspace")
        return session
    except Exception as e:
        print(f"Error connecting to Cassandra: {e}")
        raise


DATABASES = {
    "default": {
        "ENGINE": "django_cassandra_engine",
        "NAME": configuration.get("CASSANDRA_KEY_SPACE"),
        "TEST_NAME": configuration.get(
            "CASSANDRA_TEST_KEY_SPACE"
        ),  # Choose a suitable name for your test keyspace
        "HOST": configuration.get("CASSANDRA_HOST"),
        "SESSION_FACTORY_KWARGS": {
            "session": connect_to_cassandra,
        },
    },
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = "/static/"
